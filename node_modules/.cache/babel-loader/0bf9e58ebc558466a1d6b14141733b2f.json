{"ast":null,"code":"var _jsxFileName = \"/Users/ducnguyen/Downloads/Project/random-quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport quotes from './quotesDB';\nimport colors from './colorsDB';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport QuoteAuthorColor from './quoteAuthorColor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shuffleQuotes = arr => {\n      return arr.sort(() => {\n        return 0.5 - Math.random();\n      });\n    };\n\n    this.state = {\n      quote: quotes[0].quote,\n      author: quotes[0].author,\n      color: colors[0]\n    };\n    this.generateRandomQuotes = this.generateRandomQuotes.bind(this);\n    this.shuffleQuotes = this.shuffleQuotes.bind(this);\n  } // generate new quote\n\n\n  generateRandomQuotes() {\n    let num1 = Math.floor(Math.random() * quotes.length);\n    let num2 = Math.floor(Math.random() * colors.length);\n    this.setState({\n      quote: quotes[num1].quote,\n      author: quotes[num1].author,\n      color: colors[num2]\n    }); // shuffle quotes, authors, colors\n\n    this.shuffleQuotes(quotes);\n    this.shuffleQuotes(colors);\n  }\n\n  render() {\n    const style = {\n      backgroundColor: this.state.color,\n      color: this.state.color\n    };\n    const style1 = {\n      backgroundColor: this.state.color\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(QuoteAuthorColor, {\n        generateRandomQuotes: this.generateRandomQuotes,\n        index: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","quotes","colors","QuoteAuthorColor","App","constructor","props","shuffleQuotes","arr","sort","Math","random","state","quote","author","color","generateRandomQuotes","bind","num1","floor","length","num2","setState","render","style","backgroundColor","style1"],"sources":["/Users/ducnguyen/Downloads/Project/random-quote-machine/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport quotes from './quotesDB';\nimport colors from './colorsDB';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport QuoteAuthorColor from './quoteAuthorColor';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quote: quotes[0].quote,\n      author: quotes[0].author,\n      color: colors[0]\n    }\n      this.generateRandomQuotes = this.generateRandomQuotes.bind(this);\n      this.shuffleQuotes = this.shuffleQuotes.bind(this);\n  }\n  // generate new quote\n  generateRandomQuotes() {\n    let num1 = Math.floor(Math.random() * quotes.length);\n    let num2 = Math.floor(Math.random() * colors.length);\n    this.setState({\n      quote: quotes[num1].quote,\n      author: quotes[num1].author,\n      color: colors[num2]\n    })\n    // shuffle quotes, authors, colors\n    this.shuffleQuotes(quotes);\n    this.shuffleQuotes(colors);\n  }\n\n  shuffleQuotes = (arr) => {\n    return arr.sort(() => {return 0.5 - Math.random();});\n  }\n    \n  render() {\n    const style = {\n      backgroundColor: this.state.color,\n      color: this.state.color\n    }\n\n    const style1 = {\n      backgroundColor: this.state.color,\n    }\n\n    return (\n      <div className=\"container\" style={style}>\n        <QuoteAuthorColor \n          generateRandomQuotes={this.generateRandomQuotes}\n          index={this.state}\n        />\n      </div> \n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAO,uDAAP;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACC,SAAxB,CAAkC;EAChCK,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAwBnBC,aAxBmB,GAwBFC,GAAD,IAAS;MACvB,OAAOA,GAAG,CAACC,IAAJ,CAAS,MAAM;QAAC,OAAO,MAAMC,IAAI,CAACC,MAAL,EAAb;MAA4B,CAA5C,CAAP;IACD,CA1BkB;;IAEjB,KAAKC,KAAL,GAAa;MACXC,KAAK,EAAEZ,MAAM,CAAC,CAAD,CAAN,CAAUY,KADN;MAEXC,MAAM,EAAEb,MAAM,CAAC,CAAD,CAAN,CAAUa,MAFP;MAGXC,KAAK,EAAEb,MAAM,CAAC,CAAD;IAHF,CAAb;IAKE,KAAKc,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;IACA,KAAKV,aAAL,GAAqB,KAAKA,aAAL,CAAmBU,IAAnB,CAAwB,IAAxB,CAArB;EACH,CAV+B,CAWhC;;;EACAD,oBAAoB,GAAG;IACrB,IAAIE,IAAI,GAAGR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACC,MAAL,KAAgBV,MAAM,CAACmB,MAAlC,CAAX;IACA,IAAIC,IAAI,GAAGX,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACC,MAAL,KAAgBT,MAAM,CAACkB,MAAlC,CAAX;IACA,KAAKE,QAAL,CAAc;MACZT,KAAK,EAAEZ,MAAM,CAACiB,IAAD,CAAN,CAAaL,KADR;MAEZC,MAAM,EAAEb,MAAM,CAACiB,IAAD,CAAN,CAAaJ,MAFT;MAGZC,KAAK,EAAEb,MAAM,CAACmB,IAAD;IAHD,CAAd,EAHqB,CAQrB;;IACA,KAAKd,aAAL,CAAmBN,MAAnB;IACA,KAAKM,aAAL,CAAmBL,MAAnB;EACD;;EAMDqB,MAAM,GAAG;IACP,MAAMC,KAAK,GAAG;MACZC,eAAe,EAAE,KAAKb,KAAL,CAAWG,KADhB;MAEZA,KAAK,EAAE,KAAKH,KAAL,CAAWG;IAFN,CAAd;IAKA,MAAMW,MAAM,GAAG;MACbD,eAAe,EAAE,KAAKb,KAAL,CAAWG;IADf,CAAf;IAIA,oBACE;MAAK,SAAS,EAAC,WAAf;MAA2B,KAAK,EAAES,KAAlC;MAAA,uBACE,QAAC,gBAAD;QACE,oBAAoB,EAAE,KAAKR,oBAD7B;QAEE,KAAK,EAAE,KAAKJ;MAFd;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;AA/C+B;;AAkDlC,eAAeR,GAAf"},"metadata":{},"sourceType":"module"}